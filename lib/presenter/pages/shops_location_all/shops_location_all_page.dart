import 'dart:async';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:yandex_mapkit/yandex_mapkit.dart';import 'bloc/shops_location_bloc.dart';class ShopsLocationALl extends StatefulWidget {  const ShopsLocationALl({super.key});  @override  State<ShopsLocationALl> createState() => _ShopsLocationALlState();}class _ShopsLocationALlState extends State<ShopsLocationALl> {  final mapControllerCompleter = Completer<YandexMapController>();  final List<MapObject> mapObjects = [];  Future<void> _moveToCurrentLocation(double lat, double lon) async {    (await mapControllerCompleter.future).moveCamera(      animation: const MapAnimation(type: MapAnimationType.linear, duration: 1),      CameraUpdate.newCameraPosition(        CameraPosition(          target: Point(            latitude: lat,            longitude: lon,          ),          zoom: 10,        ),      ),    );  }  @override  void initState() {    _moveToCurrentLocation(41.2995, 69.2401);    super.initState();  }  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (context) => ShopsLocationBloc()..add(GetAllShopsEvent()),      child: BlocConsumer<ShopsLocationBloc, ShopsLocationState>(        listener: (context, state) {          if (state is GetAllShopsState) {            state.data.data?.data?[0].openedStores?.forEach((element) {              mapObjects.add(PlacemarkMapObject(                  mapId: MapObjectId(element.id.toString()),                  icon: PlacemarkIcon.single(PlacemarkIconStyle(                      scale: 0.8,                      image: BitmapDescriptor.fromAssetImage(                          'assets/icons/ic_locat.png'))),                  point: Point(                      latitude: double.parse(element.lat ?? ''),                      longitude: double.parse(element.long ?? ''))));            });            // state.data.data?.data?.forEach((element) {            //   mapObjects.add(PlacemarkMapObject(            //       mapId: MapObjectId(element.id.toString()),            //       icon: PlacemarkIcon.single(PlacemarkIconStyle(            //           scale: 0.8,            //           image: BitmapDescriptor.fromAssetImage(            //               'assets/icons/ic_locat.png'))),            //       point: Point(            //           latitude:            //               double.parse(element.openedStores?[0].lat ?? ''),            //           longitude:            //               double.parse(element.openedStores?[0].long ?? ''))));            // });          }        },        builder: (context, state) {          mapObjects.forEach((element) {            print(element);          });          return YandexMap(            onMapCreated: (controller) {              mapControllerCompleter.complete(controller);            },            mapObjects: mapObjects,          );        },      ),    );  }}